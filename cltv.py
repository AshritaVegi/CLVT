# -*- coding: utf-8 -*-
"""CLTV

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AOwCWUgQqJmP6l79Uhshrlr049OT36yi
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load synthetic e-commerce data
data = pd.read_csv('ecommerce_data.csv')

# Feature Engineering
data['purchase_date'] = pd.to_datetime(data['purchase_date'])
data['recency'] = (pd.to_datetime('2023-08-18') - data['purchase_date']).dt.days
rfm = data.groupby('customer_id').agg({'purchase_date': 'max', 'amount': 'sum', 'recency': 'min'})
rfm.columns = ['last_purchase', 'monetary', 'recency']
rfm['frequency'] = data.groupby('customer_id').size()

# Define CLTV period (e.g., 1 year)
cltv_period = 365

# Calculate CLTV
rfm['cltv'] = (rfm['monetary'] / rfm['frequency']) * rfm['recency'] * cltv_period

# Prepare features and target
X = rfm[['frequency', 'monetary', 'recency']]
y = rfm['cltv']

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Build Linear Regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Predict CLTV on the test set
y_pred = model.predict(X_test)

# Model evaluation
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse}")
print(f"R-squared: {r2}")